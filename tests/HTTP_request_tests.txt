waltergcc Tests

curl localhost:8080/index.html - OK

curl -X POST -H "Content-Type: plain/text" --data "1234567890" localhost:8080/curl_post.py
no cgi yet, can try 
curl -X POST -H "Content-Type: text/plain" --data "1234567890" localhost:8080  - OK
but make sure to write text/plain and not plain/text

curl -X DELETE localhost:8080/upload/upload.txt - OK  - downloaded file appears in the root of webserv folder

curl -X UNKNOWN localhost:8080  - OK - 501 Not Implemented

curl -O localhost:8080/upload/upload.txt  - OK 


Jannetta's tests
# Valid GET request to root
curl -v -X GET http://localhost:8080/

# Valid GET request to upload endpoint
curl -v -X GET http://localhost:8080/upload

# Valid GET request with query string
curl -v -X GET "http://localhost:8080/?key=value"

# Invalid GET request (nonexistent resource)
curl -v -X GET http://localhost:8080/nonexistent


# Valid POST with no payload
curl -v -X POST http://localhost:8080/upload/testfile.txt -d ""

# Valid POST with small payload
curl -v -X POST http://localhost:8080/upload/testfile.txt -d "test=data"

# Valid POST with file upload -OK - make sure there is testfile in the root or webserv folder
curl -v -X POST http://localhost:8080/upload/testfile.txt --data-binary @testfile.txt

# Invalid POST with missing Content-Length
curl -v -X POST http://localhost:8080/upload/testfile.txt -H "Content-Length: "

# Invalid POST with payload exceeding max body size - OK - 413 Payload Too Large
dd if=/dev/zero of=largefile.txt bs=1 count=11000000
curl -v -X POST http://localhost:8080/upload/largefile.txt --data-binary @largefile.txt

curl -v -X POST -H "Content-Type: application/pdf" --data-binary @webSites/main/uploadlibrary/sample.pdf -H "Expect:" http://localhost:8080/upload/sample.pdf
OK uploads PDF with disabled Expect: 100-continue header 

curl -v -X POST -H "Content-Type: application/pdf" --data-binary @webSites/main/uploadlibrary/sample.pdf http://localhost:8080/upload/sample.pdf
KO without -H "Expect:


# Valid DELETE request for existing file - OK File Deleted
curl -v -X DELETE http://localhost:8080/upload/testfile.txt

# Invalid DELETE request for nonexistent file - OK 404 Not Found
curl -v -X DELETE http://localhost:8080/upload/nonexistentfile.txt 


# Invalid DELETE request to root (not allowed) -OK 403 Forbidden
curl -v -X DELETE http://localhost:8080/


# Invalid URL characters - OK 400 Bad Request: Invalid Character in URL
curl -v -X GET "http://localhost:8080/invalid|char"

# Missing required headers (e.g., Host)  - KO HTTP/1.1 200 OK
curl -v --http1.1 --header "" http://localhost:8080/

# Invalid HTTP method - OK 501 Not Implemented
curl -v -X INVALID http://localhost:8080/


Valid HTTP version - OK 
curl -X GET "http://localhost:8080/" --http1.1
Output -> index.html code

Invalid HTTP version - OK 505 HTTP Version Not Supported: Use HTTP/1.1
curl -X GET "http://localhost:8080/" --http1.0 
curl -v --http1.0 http://localhost:8080/

Output
<html><body><h1>505 HTTP Version Not Supported</h1></body></html>


POST

curl -v -X POST http://localhost:8080/upload/testfile.txt \
-H "Content-Type: text/plain" \
--data-binary "This is a simple plain text content."

OK 
curl -v -X POST http://localhost:8080/upload/sample.png \
-H "Content-Type: image/png" \
--data-binary @webSites/main/42.png

OK
curl -v -X POST http://localhost:8080/upload/data.json \
-H "Content-Type: application/json" \
--data-binary '{"key": "value", "number": 42}'


Single File Multipart Upload
curl -v -X POST http://localhost:8080/upload/single_file.txt \
-H "Content-Type: multipart/form-data; boundary=----WebKitFormBoundary" \
--data-binary $'------WebKitFormBoundary\r\nContent-Disposition: form-data; name="file"; filename="single_file.txt"\r\nContent-Type: text/plain\r\n\r\nSingle file content.\r\n------WebKitFormBoundary--'

Output:
> Content-Type: multipart/form-data; boundary=----WebKitFormBoundary
> Content-Length: 175
> 
< HTTP/1.1 200 OK
< Content-Length: 36
< 
* Connection #0 to host localhost left intact
Multipart file uploaded successfully%  

curl -v -X POST http://localhost:8080/upload/sample.txt \
-H "Content-Type: multipart/form-data; boundary=----WebKitFormBoundary" \
--data-binary $'------WebKitFormBoundary\r\nContent-Disposition: form-data; name="file"; filename="sample.txt"\r\nContent-Type: text/plain\r\n\r\n'"$(cat /Users/jansol/Desktop/WEBSERV/webserv/webSites/main/uploadlibrary/sample.txt)"$'\r\n------WebKitFormBoundary--'


	Multiple Files in Multipart

curl -v -X POST http://localhost:8080/upload/multiple_files \
-H "Content-Type: multipart/form-data; boundary=----WebKitFormBoundary" \
--data-binary $'------WebKitFormBoundary\r\nContent-Disposition: form-data; name="file1"; filename="file1.txt"\r\nContent-Type: text/plain\r\n\r\nContent of file 1.\r\n------WebKitFormBoundary\r\nContent-Disposition: form-data; name="file2"; filename="file2.json"\r\nContent-Type: application/json\r\n\r\n{"key": "value"}\r\n------WebKitFormBoundary--'

Error Cases
Missing Content-Type - KO
curl -v -X POST http://localhost:8080/upload/missing_content_type.txt \
--data-binary "Missing Content-Type header."
output 
> Content-Type: application/x-www-form-urlencoded
> 
< HTTP/1.1 200 OK
< Content-Length: 26
< 
* Connection #0 to host localhost left intact
File uploaded successfully%

2.	Missing Payload - OK
curl -v -X POST http://localhost:8080/upload/no_payload.txt \
-H "Content-Type: text/plain"
Output 
* Excess found writing body: excess = 146, size = 54, maxdownload = 54, bytecount = 54
* Closing connection
<html><body><h1>411 Length Required</h1></body></html>%    

3. Invalid Boundary in Multipart  - OK
curl -v -X POST http://localhost:8080/upload/invalid_boundary.txt \
-H "Content-Type: multipart/form-data; boundary=INVALIDBOUNDARY" \
--data-binary $'------INVALIDBOUNDARY\r\nContent-Disposition: form-data; name="file"; filename="test.txt"\r\nContent-Type: text/plain\r\n\r\nInvalid boundary content.\r\n------INVALIDBOUNDARY--'
output 
< HTTP/1.1 400 Malformed multipart section
< Content-Length: 66
< 
* Connection #0 to host localhost left intact
<html><body><h1>400 Malformed multipart section</h1></body></html>%       


Edge Cases

	1.	Empty Payload  - OK 

curl -v -X POST http://localhost:8080/upload/empty_file.txt \
-H "Content-Type: text/plain" \
--data-binary ""	
output 
> Content-Length: 0
> 
< HTTP/1.1 200 OK
< Content-Length: 26
< 
* Connection #0 to host localhost left intact
File uploaded successfully%  

2.	Empty File in Multipart - OK 
curl -v -X POST http://localhost:8080/upload/empty_multipart_file.txt \
-H "Content-Type: multipart/form-data; boundary=----WebKitFormBoundary" \
--data-binary $'------WebKitFormBoundary\r\nContent-Disposition: form-data; name="file"; filename="empty_file.txt"\r\nContent-Type: text/plain\r\n\r\n\r\n------WebKitFormBoundary--'

output
< HTTP/1.1 200 OK
< Content-Length: 36
< 
* Connection #0 to host localhost left intact
Multipart file uploaded successfully%   


3.	Filename with Special Characters - OK

curl -v -X POST http://localhost:8080/upload/special_@_#_$.txt \
-H "Content-Type: text/plain" \
--data-binary "File with special characters in the filename."
Output > Content-Type: text/plain
> Content-Length: 45
> 
< HTTP/1.1 200 OK
< Content-Length: 26
< 
* Connection #0 to host localhost left intact
File uploaded successfully%   

	4.	Unsupported Content-Type - OK

curl -v -X POST http://localhost:8080/upload/unsupported_file.type \
-H "Content-Type: application/x-unsupported" \
--data-binary "Content with unsupported Content-Type."

output 
< HTTP/1.1 415 Unsupported Media Type
< Content-Length: 61
< 
* Connection #0 to host localhost left intact
<html><body><h1>415 Unsupported Media Type</h1></body></html>%


redirect 
The server should respond with a 301 Moved Permanently or 302 Found status code
curl -v http://localhost:8080/redirect


Integration Tests

	1.	File Upload Followed by Retrieval (GET)

curl -v -X POST http://localhost:8080/upload/file_to_get.txt \
-H "Content-Type: text/plain" \
--data-binary "This file will be retrieved via GET."

curl -v http://localhost:8080/upload/file_to_get.txt

curl -X POST http://localhost:8080/upload/file_to_get.txt \
-H "Content-Type: text/plain" \
--data-binary "This file will be retrieved via GET."

curl http://localhost:8080/upload/file_to_get.txt 
Output
File uploaded successfullyThis file will be retrieved via GET.

	2.	Delete Uploaded File
curl -v -X POST http://localhost:8080/upload/to_be_deleted.txt \
-H "Content-Type: text/plain" \
--data-binary "This file will be deleted."

curl -v -X DELETE http://localhost:8080/upload/to_be_deleted.txt


 curl -X POST http://localhost:8080/upload/to_be_deleted.txt \ 
-H "Content-Type: text/plain" \
--data-binary "This file will be deleted."

curl -X DELETE http://localhost:8080/upload/to_be_deleted.txt 
File uploaded successfullyFile Deleted%   


works: - not anymore.. 
 curl -v -X POST http://localhost:8080/upload/subject.pdf \
-H "Content-Type: application/pdf" \
--data-binary @en.subject_webserv.pdf -H "Expect:"

doesnt work:
curl -v -X POST http://localhost:8080/upload/subject.pdf \
-H "Content-Type: application/pdf" \      
--data-binary @en.subject_webserv.pdf

Current output - need to fix?:
HTTP/1.1 413 Payload Too Large
< Content-Length: 56
* HTTP error before end of send, stop sending
< 
* Closing connection
<html><body><h1>413 Payload Too Large</h1></body></html>%

Disable the Expect: 100-continue Header: KO
curl -v -X POST -H "Content-Type: application/pdf" --data-binary @webSites/main/uploadlibrary/sample.pdf --no-keepalive http://localhost:8080/upload/testfile.pdf


curl -v --http1.1 -X POST http://localhost:8080/upload --header "Transfer-Encoding: chunked" --data-binary @-

5
Hello
7
, world!
0

After entering 0 (end of chunks) and pressing Enter, press Ctrl+D to send EOF (End Of File) to curl.
server {
	server_name oekjo;
	listen_port 8080;
	listen_host white;
	#root /home/joshua/Desktop/webserv/webSites/main/green;
  root /Users/thibault/kdrive/1-PROJECTS/P-42/webserv/webSites/main/green;
#root /path/of/your/webserv/websites/white;
	index index.html;
	client_max_body_size 1M;

}

server {
	server_name test;
 	listen_port 8081;
	listen_host example.com;
	# root /home/joshua/Desktop/webserv/webSites/main/black;
  root /Users/thibault/kdrive/1-PROJECTS/P-42/webserv/webSites/main/black;
	#root /path/of/your/webserv/websites/black;
	index index.html;
	client_max_body_size 1M;
}


#COMMENTS:
#- port 80 does not work -> bind() error, it is probably reserved for the system
#- this situation works (as chat GPT)
#
#
# == Chat GPT analyse du cas ==
#
# "voici un directive de server nginx avec deux bloc server
# server {
# 	server_name main_site;
# 	listen 8080;
# 	host localhost;
# 	root /home/wcorrea-/workplace/common_core/webserv/webserv/websites/main_site;
# 	index index.html;
# 	client_max_body_size 1M;
# }
#
# server {
# 	server_name blue;
# 	listen 8081;
# 	host blue.42.fr;
# 	root /home/wcorrea-/workplace/common_core/webserv/webserv/websites/blue;
# 	index index.html;
# 	client_max_body_size 1M;
# }
#
# admettons que j'ai redirigé dans etc/hosts le blue.42.fr sur le 127.0.0.1, identique à localhost.
#
# Que se passe-til si je mets l'URL blue.42.fr:8080 ? quel site est servi ? le blue ou le main_site ? quelle est la logique server dans ce cas intermediaire ?"
# "
#
#
# ----->
# Dans ce cas, le site main_site sera servi, et voici pourquoi :
#
# Analyse de la situation
# URL demandée : blue.42.fr:8080
#
# Le port utilisé est 8080.
# L'hôte dans l'URL est blue.42.fr.
# Configuration Nginx des blocs server :
#
# Premier bloc server :
# listen 8080 : Écoute sur le port 8080.
# server_name main_site : Ce serveur est conçu pour répondre aux requêtes adressées à main_site (ou tout hôte par défaut si non précisé).
# Deuxième bloc server :
# listen 8081 : Écoute sur le port 8081.
# server_name blue : Ce serveur est conçu pour répondre à blue.42.fr, mais uniquement sur le port 8081.
# Règles de résolution de Nginx :
#
# Nginx commence par trouver le serveur écoutant sur le port spécifié dans la requête :
# Ici, le port demandé est 8080. Seul le premier bloc server écoute sur ce port.
# Si plusieurs blocs écoutent sur le même port, Nginx applique les règles suivantes :
# Il compare le server_name avec l'hôte fourni (blue.42.fr dans ce cas).
# Si aucun server_name ne correspond, il utilise le serveur par défaut du port.
# Résultat :
#
# Le deuxième bloc server ne sera jamais pris en compte car il écoute uniquement sur 8081.
# Seul le premier bloc server est configuré pour répondre sur le port 8080.
# Le site main_site sera servi, même si l'hôte spécifié (blue.42.fr) correspondrait à un autre serveur dans d'autres circonstances.
# Logique générale de sélection des blocs server dans Nginx
# Filtrage par port : Seuls les blocs server qui écoutent sur le port de la requête sont considérés.
# Filtrage par server_name :
# Si un server_name correspond à l'hôte demandé, ce bloc est choisi.
# Sinon, le premier bloc défini pour ce port dans le fichier de configuration devient le serveur par défaut et est utilisé.
# Règles spéciales :
# Si aucun bloc server ne correspond, Nginx renvoie une erreur (généralement 404 ou 400).
# Exemple concret dans ton cas
# URL : blue.42.fr:8080
#
# Port : 8080 → Correspond uniquement au premier bloc server.
# Hôte : blue.42.fr → Ne correspond pas à server_name main_site.
# Le premier bloc server est utilisé comme serveur par défaut pour ce port.
# URL : blue.42.fr:8081
#
# Port : 8081 → Correspond uniquement au deuxième bloc server.
# Hôte : blue.42.fr → Correspond à server_name blue.
# Le deuxième bloc server sera utilisé.
# Résumé
# Si l'URL est blue.42.fr:8080, le site main_site est servi, car il est configuré pour répondre sur le port 8080, indépendamment du server_name.

